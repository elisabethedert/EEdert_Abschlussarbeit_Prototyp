name: Create and publish a Docker image and deploy

# jedes mal beim push auf master branch, dann alle steps ausfÃ¼hren
on:
  push:
    branches: [ "master" ]

# wird unten verwendet
env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # tag with lowecase
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            production

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy_via_ssh:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout latest or specific tag
      - name: checkout
        uses: actions/checkout@v3

      - name: Create .env file, ssh config-file and private ssh-key
        run: |
          echo "APP_NAME=Circulo" > .env
          echo "APP_ENV=local" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_TIMEZONE=Europe/Berlin" >> .env

          echo "APP_LOCALE=en" >> .env
          echo "APP_FALLBACK_LOCALE=en" >> .env
          echo "APP_FAKER_LOCALE=en_US" >> .env

          echo "APP_MAINTENANCE_DRIVER=file" >> .env
          echo "APP_MAINTENANCE_STORE=database" >> .env

          echo "BCRYPT_ROUNDS=12" >> .env

          echo "LOG_CHANNEL=stack" >> .env
          echo "LOG_STACK=stderr" >> .env
          echo "LOG_DEPRECATIONS_CHANNEL=null" >> .env
          echo "LOG_LEVEL=debug" >> .env

          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

          echo "MYSQL_DATABASE=$DB_DATABASE" >> .env
          echo "MYSQL_USER=$DB_USERNAME" >> .env
          echo "MYSQL_PASSWORD=$DB_PASSWORD" >> .env
          echo "MYSQL_RANDOM_ROOT_PASSWORD=yes" >> .env

          echo 'VITE_APP_NAME="${APP_NAME}"' >> .env
          mkdir ~/.ssh/
          echo "Host circulo" > ~/.ssh/config
          echo "    HostName ${{ secrets.DB_HOST }}" >> ~/.ssh/config
          echo "    Port 22" >> ~/.ssh/config
          echo "    User ${{ secrets.DEPLOY_USERNAME }}" >> ~/.ssh/config

          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.DEPLOY_KNOWNHOSTS }}" > ~/.ssh/known_hosts

      - name: deploy
        run: |
          docker -H ssh://circulo compose -f docker-compose.prod.yaml pull
          docker -H ssh://circulo compose -f docker-compose.prod.yaml up -d